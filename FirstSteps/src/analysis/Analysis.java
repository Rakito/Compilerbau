/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAParaParas(AParaParas node);
    void caseAParasParas(AParasParas node);
    void caseAIfex(AIfex node);
    void caseAFactorExpr(AFactorExpr node);
    void caseAFunctionExpr(AFunctionExpr node);
    void caseAConstructorExpr(AConstructorExpr node);
    void caseAPlusExpr(APlusExpr node);
    void caseAMinusExpr(AMinusExpr node);
    void caseAFunctionFunction(AFunctionFunction node);
    void caseAConsConst(AConsConst node);
    void caseANilConst(ANilConst node);
    void caseATermFactor(ATermFactor node);
    void caseAMultFactor(AMultFactor node);
    void caseADivFactor(ADivFactor node);
    void caseAModFactor(AModFactor node);
    void caseANumberTerm(ANumberTerm node);
    void caseAIdTerm(AIdTerm node);
    void caseAExprTerm(AExprTerm node);

    void caseTDefine(TDefine node);
    void caseTFunc(TFunc node);
    void caseTBegin(TBegin node);
    void caseTEnd(TEnd node);
    void caseTCons(TCons node);
    void caseTWhere(TWhere node);
    void caseTBreak(TBreak node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTId(TId node);
    void caseTNumber(TNumber node);
    void caseTPlus(TPlus node);
    void caseTHyphen(THyphen node);
    void caseTAsterisk(TAsterisk node);
    void caseTPercent(TPercent node);
    void caseTDot(TDot node);
    void caseTComma(TComma node);
    void caseTQuery(TQuery node);
    void caseTColon(TColon node);
    void caseTSemicolon(TSemicolon node);
    void caseTLBox(TLBox node);
    void caseTRBox(TRBox node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTLArrow(TLArrow node);
    void caseTRArrow(TRArrow node);
    void caseTBlank(TBlank node);
    void caseTDash(TDash node);
    void caseTAmpersand(TAmpersand node);
    void caseTSlash(TSlash node);
    void caseTQuestion(TQuestion node);
    void caseTExclamation(TExclamation node);
    void caseTAt(TAt node);
    void caseTTilde(TTilde node);
    void caseTSection(TSection node);
    void caseTUnderscore(TUnderscore node);
    void caseTPipe(TPipe node);
    void caseTHash(THash node);
    void caseTCaret(TCaret node);
    void caseTDegree(TDegree node);
    void caseTBlackslash(TBlackslash node);
    void caseTReturn(TReturn node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
}
