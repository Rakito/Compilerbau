/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ADefineStructBody extends PStructBody
{
    private PDefine _define_;
    private PStructBody _structBody_;

    public ADefineStructBody()
    {
        // Constructor
    }

    public ADefineStructBody(
        @SuppressWarnings("hiding") PDefine _define_,
        @SuppressWarnings("hiding") PStructBody _structBody_)
    {
        // Constructor
        setDefine(_define_);

        setStructBody(_structBody_);

    }

    @Override
    public Object clone()
    {
        return new ADefineStructBody(
            cloneNode(this._define_),
            cloneNode(this._structBody_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADefineStructBody(this);
    }

    public PDefine getDefine()
    {
        return this._define_;
    }

    public void setDefine(PDefine node)
    {
        if(this._define_ != null)
        {
            this._define_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._define_ = node;
    }

    public PStructBody getStructBody()
    {
        return this._structBody_;
    }

    public void setStructBody(PStructBody node)
    {
        if(this._structBody_ != null)
        {
            this._structBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._structBody_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._define_)
            + toString(this._structBody_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._define_ == child)
        {
            this._define_ = null;
            return;
        }

        if(this._structBody_ == child)
        {
            this._structBody_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._define_ == oldChild)
        {
            setDefine((PDefine) newChild);
            return;
        }

        if(this._structBody_ == oldChild)
        {
            setStructBody((PStructBody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
