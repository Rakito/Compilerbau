/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ANativcExpr extends PExpr
{
    private TCstart _cstart_;
    private TString _string_;
    private TCend _cend_;

    public ANativcExpr()
    {
        // Constructor
    }

    public ANativcExpr(
        @SuppressWarnings("hiding") TCstart _cstart_,
        @SuppressWarnings("hiding") TString _string_,
        @SuppressWarnings("hiding") TCend _cend_)
    {
        // Constructor
        setCstart(_cstart_);

        setString(_string_);

        setCend(_cend_);

    }

    @Override
    public Object clone()
    {
        return new ANativcExpr(
            cloneNode(this._cstart_),
            cloneNode(this._string_),
            cloneNode(this._cend_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANativcExpr(this);
    }

    public TCstart getCstart()
    {
        return this._cstart_;
    }

    public void setCstart(TCstart node)
    {
        if(this._cstart_ != null)
        {
            this._cstart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cstart_ = node;
    }

    public TString getString()
    {
        return this._string_;
    }

    public void setString(TString node)
    {
        if(this._string_ != null)
        {
            this._string_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._string_ = node;
    }

    public TCend getCend()
    {
        return this._cend_;
    }

    public void setCend(TCend node)
    {
        if(this._cend_ != null)
        {
            this._cend_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cend_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cstart_)
            + toString(this._string_)
            + toString(this._cend_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cstart_ == child)
        {
            this._cstart_ = null;
            return;
        }

        if(this._string_ == child)
        {
            this._string_ = null;
            return;
        }

        if(this._cend_ == child)
        {
            this._cend_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cstart_ == oldChild)
        {
            setCstart((TCstart) newChild);
            return;
        }

        if(this._string_ == oldChild)
        {
            setString((TString) newChild);
            return;
        }

        if(this._cend_ == oldChild)
        {
            setCend((TCend) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
